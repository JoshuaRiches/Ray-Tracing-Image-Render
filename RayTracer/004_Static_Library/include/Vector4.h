#pragma once
//\---------------------------------------------------------------------------------
// Vector4 - 3 dimensional vector class
//\---------------------------------------------------------------------------------
class Vector4
{
public:
	//\-----------------------------------------------------------------------------
	// Member Variables
	//\-----------------------------------------------------------------------------
	float x; float y; float z; float w;
#pragma region Constructors/Destructors
	//\-----------------------------------------------------------------------------
	// Constructors
	//\-----------------------------------------------------------------------------
	Vector4();
	Vector4(const float a_x, const float a_y, const float a_z, const float a_w);
	Vector4(const Vector4& a_v4);
	Vector4(const Vector3& a_v3, const float a_w);
	//\-----------------------------------------------------------------------------
	// Destructor
	//\-----------------------------------------------------------------------------
	~Vector4();
#pragma endregion
#pragma region Operator Overloads
	//\-----------------------------------------------------------------------------
	// Equivalence Operators
	//\-----------------------------------------------------------------------------
	bool			operator ==			(const Vector4& a_v4) const;
	bool			operator !=			(const Vector4& a_v4) const;
	//\-----------------------------------------------------------------------------
	// Negative Operator
	//\-----------------------------------------------------------------------------
	const Vector4	operator - () const;
	Vector4			operator -			(const Vector4& a_v4) const;
	Vector4			operator -			(const float a_scalar) const;
	//\-----------------------------------------------------------------------------
	// Addition Operator
	//\-----------------------------------------------------------------------------
	Vector4			operator +			(const Vector4& a_v4) const;
	Vector4			operator +			(const float a_scalar) const;
	//\-----------------------------------------------------------------------------
	// Dot Product Functionality
	//\-----------------------------------------------------------------------------
	float					Dot(const Vector4& a_v4) const;
	friend float			Dot(const Vector4& a_v4A, const Vector4& a_v4B);
	//\-----------------------------------------------------------------------------
	// Cross product
	//\-----------------------------------------------------------------------------
	Vector4					Cross(const Vector4& a_v4) const;
	friend Vector4			Cross(const Vector4& a_v4a, const Vector4& a_v4b);
	//\-----------------------------------------------------------------------------
	// Multiplication Operators
	//\-----------------------------------------------------------------------------
	Vector4			operator *			(const float& a_scalar) const;
#pragma endregion
	//\-----------------------------------------------------------------------------
	// Get Length of Vector
	//\-----------------------------------------------------------------------------
	float					Length() const;
	//\-----------------------------------------------------------------------------
	// Normalize the Vector - modifies member variables (non const function)
	//\-----------------------------------------------------------------------------
	void					Normalize();
	//\-----------------------------------------------------------------------------
	// Linear Interpolate
	//\-----------------------------------------------------------------------------
	friend Vector4			Lerp(const Vector4& a_v4A, const Vector4& a_v4B, const float a_t);
	//\-----------------------------------------------------------------------------
	// Return Vec3 from Vec4
	//\-----------------------------------------------------------------------------
	Vector3					XYZ();
};